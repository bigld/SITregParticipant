var UI5_VIEW_FILE_SUFFIX = ".view.xml";
var UI5_FRAGMENT_FILE_SUFFIX = ".fragment.xml";

function _shouldRunAnalysis(fileResource) {
    return (fileResource.getPath().endsWith(UI5_VIEW_FILE_SUFFIX) || fileResource.getPath().endsWith(UI5_FRAGMENT_FILE_SUFFIX));
}

var XmlViewReader = require("./ui5Utils/XmlViewReader");
var Ui5MetadataMng = require("./ui5Utils/Ui5MetadataMng");
function createReport() {
    return {
        "root" : {},
        "issues" : []
    };
}

module.exports = {
    analyse : function(fileResource, bIsIdAttributeRequired) {
        if (!_shouldRunAnalysis(fileResource)) {
            return;
        }
        /* TODO: once we support more then one metadata we should have a logic to get the relevant metadata to use.
            var versionMetadata = this.context.getUi5Metadata("xml", fileResource.getPath());
        */
        var versionMetadata;
        if (!versionMetadata) {
            //load the static metadata. the version used can be found in Ui5MetadataMng
            versionMetadata = Ui5MetadataMng.loadMetadata();
        }
        var ui5SemanticIssuesReport = XmlViewReader.validateXml(
            fileResource, versionMetadata.metadata, bIsIdAttributeRequired);
        return {
            "root" : {},
            "issues" : ui5SemanticIssuesReport.issues || [],
            "aId": ui5SemanticIssuesReport.aId || []
        };
    }

};
